version: "3.6"

services:
    fastapi_service:
        build:
            context: src/.
            args:
                - PG_DB_ARG=${PG_DB}
                - PG_HOST_ARG=${PG_HOST}
                - PG_PORT_ARG=${PG_PORT}
                - PG_USER_ARG=${PG_USER}
                - PG_PASS_ARG=${PG_PASS}
        ports:
            - "6432:8000"
        healthcheck:
            test: ["CMD-SHELL", "curl -v http://fastapi_service:8000/ping || exit 1"]
            timeout: 15s
            interval: 2s
            retries: 400
        depends_on:
            postgres:
                condition: service_healthy

    postgres:
        build: postgres/.
        container_name: postgres_db
        volumes:
            - ./postgres:/postgres/schema
        environment:
            POSTGRES_DB: ${PG_DB}
            POSTGRES_USER: ${PG_USER}
            POSTGRES_PASSWORD: ${PG_PASS}
            POSTGRES_PORT: ${PG_PORT}
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U admin -d service_database"]
            interval: 2s
            timeout: 15s
            retries: 10

    testsuite:
        build:
            context: testsuite/.
            args:
                - SERVICE_URL_ARG=${SERVICE_URL}
                - PG_DB_ARG=${PG_DB}
                - PG_HOST_ARG=${PG_HOST}
                - PG_PORT_ARG=${PG_PORT}
                - PG_USER_ARG=${PG_USER}
                - PG_PASS_ARG=${PG_PASS}
                - PG_SCHEMA_ARG=${PG_SCHEMA}
        volumes:
            - ./testsuite:/usr/src/testsuite
        command: pytest . -vvv --log-cli-level=INFO
        depends_on:
            fastapi_service:
                condition: service_healthy
            postgres:
                condition: service_healthy
